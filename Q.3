#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX_STUDENTS 100
#define MAX_NAME_LENGTH 100
void insert(char **names,int *n,int p);
void append(char **names,int *n);
void search(char **names,int n);
void delete_name(char **names, int *n, int p);
int main() 
{
    int n;
    printf("Enter the number of students: ");
    scanf("%d", &n);

    char **names = (char **)malloc(MAX_STUDENTS * sizeof(char *));
    for (int i = 0; i < n; i++) 
	{
        names[i] = (char *)malloc(MAX_NAME_LENGTH * sizeof(char));
    } 
    
    printf("Enter names of %d students:\n", n);
    for (int i=0;i<n;i++) 
	{
        scanf("%s",names[i]); 
    } 
	while(1)
	{
    printf("\n");
    printf("1. Insert \n");
    printf("2. Append \n");
    printf("3. Search \n");
    printf("4. Delete \n");
	printf("5. Exit\n");
    
    int a,p;
    printf("\nEnter choice\n");
    scanf("%d",&a);
    switch(a)
    {
    	case 1:
    	    printf("\nEnter position to enter name\n");
    	    scanf("%d",&p);
    	    insert(names,&n,p-1);
    	    printf("\nNew list\n");
    		for (int i = 0; i < n; i++) 
			{
            printf("%s\n",names[i]);
            }
    		break;
    	case 2:
    		append(names,&n);
    		printf("\nNew list\n");
    		for (int i = 0; i < n; i++) 
			{
            printf("%s\n",names[i]);
            }
    		break;
    	case 3:
    		search(names,n);
    		break;
    	case 4:
    		printf("\nEnter position to delete name\n");
    		scanf("%d",&p);
    		delete_name(names,&n,p-1);
    		printf("\nNew list\n");
    		for (int i = 0; i < n; i++) 
			{
            printf("%s\n",names[i]);
            }
    		break;
		case 5:
		    printf("Exited Succesfully\n");
			return 0;
			break;
	}
	}
    
	for (int i = 0; i < n; i++) 
	{
        free(names[i]);
    }
    free(names);
    return 0;
}
void insert(char **names,int *n,int p)
{
	if (p < 0 || p >= *n) {
        printf("Invalid position!\n");
        return;
    }
	for(int i=*n;i>p;i--)
	{
		names[i]=names[i-1];
	}
	printf("\nEnter name\n");
	names[p]= (char *)malloc(MAX_NAME_LENGTH * sizeof(char));
	scanf("%s",names[p]);
	(*n)++;
}
void append(char **names,int *n)
{
	printf("\nEnter name\n");
	names[*n] = (char*)malloc(MAX_NAME_LENGTH * sizeof(char));
	scanf(" %s",names[*n]);
	(*n)++;
}
void search(char **names,int n)
{
	char str[MAX_NAME_LENGTH];
	printf("\nEnter search name\n");
	scanf("%s",str);
	for(int i=0;i<n;i++)
	{
		if( strcmp(names[i],str) == 0)
		{
			printf("Found");
			return;
		}	
	}
	printf("Not found");
}
void delete_name(char **names, int *n, int p) 
{
    if (p < 0 || p >= *n) {
        printf("Invalid position!\n");
        return;
    }
    free(names[p]);
    for (int i = p; i < *n - 1; i++) 
	{
        names[i] = names[i + 1];
    }
    (*n)--;
}
